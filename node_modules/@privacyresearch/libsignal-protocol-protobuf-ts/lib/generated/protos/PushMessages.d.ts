import { Writer, Reader } from 'protobufjs/minimal';
export interface IncomingPushMessageSignal {
    type: IncomingPushMessageSignal_Type;
    source: string;
    sourceDevice: number;
    relay: string;
    timestamp: number;
    /**
     *  Contains an encrypted PushMessageContent
     */
    message: Uint8Array;
}
export interface PushMessageContent {
    body: string;
    attachments: PushMessageContent_AttachmentPointer[];
    group: PushMessageContent_GroupContext | undefined;
    flags: number;
}
export interface PushMessageContent_AttachmentPointer {
    id: number;
    contentType: string;
    key: Uint8Array;
}
export interface PushMessageContent_GroupContext {
    id: Uint8Array;
    type: PushMessageContent_GroupContext_Type;
    name: string;
    members: string[];
    avatar: PushMessageContent_AttachmentPointer | undefined;
}
export declare const IncomingPushMessageSignal_Type: {
    UNKNOWN: 0;
    CIPHERTEXT: 1;
    KEY_EXCHANGE: 2;
    PREKEY_BUNDLE: 3;
    PLAINTEXT: 4;
    RECEIPT: 5;
    PREKEY_BUNDLE_DEVICE_CONTROL: 6;
    DEVICE_CONTROL: 7;
    UNRECOGNIZED: -1;
    fromJSON(object: any): IncomingPushMessageSignal_Type;
    toJSON(object: IncomingPushMessageSignal_Type): string;
};
export declare type IncomingPushMessageSignal_Type = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | -1;
export declare const PushMessageContent_Flags: {
    END_SESSION: 1;
    UNRECOGNIZED: -1;
    fromJSON(object: any): PushMessageContent_Flags;
    toJSON(object: PushMessageContent_Flags): string;
};
export declare type PushMessageContent_Flags = 1 | -1;
export declare const PushMessageContent_GroupContext_Type: {
    UNKNOWN: 0;
    UPDATE: 1;
    DELIVER: 2;
    QUIT: 3;
    UNRECOGNIZED: -1;
    fromJSON(object: any): PushMessageContent_GroupContext_Type;
    toJSON(object: PushMessageContent_GroupContext_Type): string;
};
export declare type PushMessageContent_GroupContext_Type = 0 | 1 | 2 | 3 | -1;
export declare const IncomingPushMessageSignal: {
    encode(message: IncomingPushMessageSignal, writer?: Writer): Writer;
    decode(input: Uint8Array | Reader, length?: number | undefined): IncomingPushMessageSignal;
    fromJSON(object: any): IncomingPushMessageSignal;
    fromPartial(object: DeepPartial<IncomingPushMessageSignal>): IncomingPushMessageSignal;
    toJSON(message: IncomingPushMessageSignal): unknown;
};
export declare const PushMessageContent: {
    encode(message: PushMessageContent, writer?: Writer): Writer;
    decode(input: Uint8Array | Reader, length?: number | undefined): PushMessageContent;
    fromJSON(object: any): PushMessageContent;
    fromPartial(object: DeepPartial<PushMessageContent>): PushMessageContent;
    toJSON(message: PushMessageContent): unknown;
};
export declare const PushMessageContent_AttachmentPointer: {
    encode(message: PushMessageContent_AttachmentPointer, writer?: Writer): Writer;
    decode(input: Uint8Array | Reader, length?: number | undefined): PushMessageContent_AttachmentPointer;
    fromJSON(object: any): PushMessageContent_AttachmentPointer;
    fromPartial(object: DeepPartial<PushMessageContent_AttachmentPointer>): PushMessageContent_AttachmentPointer;
    toJSON(message: PushMessageContent_AttachmentPointer): unknown;
};
export declare const PushMessageContent_GroupContext: {
    encode(message: PushMessageContent_GroupContext, writer?: Writer): Writer;
    decode(input: Uint8Array | Reader, length?: number | undefined): PushMessageContent_GroupContext;
    fromJSON(object: any): PushMessageContent_GroupContext;
    fromPartial(object: DeepPartial<PushMessageContent_GroupContext>): PushMessageContent_GroupContext;
    toJSON(message: PushMessageContent_GroupContext): unknown;
};
declare type Builtin = Date | Function | Uint8Array | string | number | undefined;
declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
