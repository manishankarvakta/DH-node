import { Writer, Reader } from 'protobufjs/minimal';
import { PushMessageContent_GroupContext, PushMessageContent_AttachmentPointer } from '.';
export interface PushMessageContentCompatible {
    body?: string;
    attachments: PushMessageContent_AttachmentPointer[];
    group: PushMessageContent_GroupContext | undefined;
    flags?: number;
}
export declare const PushMessageContentCompatible: {
    encode(message: PushMessageContentCompatible, writer?: Writer): Writer;
    decode(input: Uint8Array | Reader, length?: number | undefined): PushMessageContentCompatible;
    fromJSON(object: any): PushMessageContentCompatible;
    fromPartial(object: DeepPartial<PushMessageContentCompatible>): PushMessageContentCompatible;
    toJSON(message: PushMessageContentCompatible): unknown;
};
declare type Builtin = Date | Function | Uint8Array | string | number | undefined;
declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
